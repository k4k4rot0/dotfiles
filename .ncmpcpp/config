#########################################################
##                                      
## Este é um exemplo de arquivo de configuração, copie-o
## para ~/.ncmpcpp/config e configure suas preferências
##
## $ ncmpcpp -v :: 0.6_beta2
#########################################################
#
# By: @k4k4rot0
# 
# ===============
# == Diretórios 
# ===============
##
## Diretório para armazenar arquivos relacionados ao ncmpcpp.
## Alterá-lo é útil se você deseja armazenar tudo em outro lugar e fornecer configuração de linha de comando
## para localização alternativa para o arquivo de configuração que define isso ao iniciar o ncmpcpp.
##
#
ncmpcpp_directory = "~/.ncmpcpp"
#
##
## Diretório para armazenar letras baixadas.
## O padrão é ~ / .lyrics, pois outros clientes MPD
## (por exemplo, ncmpc) também usam esse local.
##
#
# lyrics_directory = ~/.lyrics
#
# ===========================
# == Configurações de Conexão 
# ===========================
#
mpd_host = 127.0.0.1
mpd_port = 6600
mpd_connection_timeout = 5
#
## Necessário para o editor de tags e operações de arquivo funcionarem.
#
mpd_music_dir =	"~/Música"
mpd_crossfade_time = 5
#
# =========================
# == Visualizador de Música 
# =========================
#
## Observação: Para fazer o visualizador de música funcionar, você precisará usar
## a saída mpd fifo, cujo parâmetro de formato deve ser definido como 44100:16:1
## para visualização mono ou 44100:16:2 para visualização estéreo.
## Exemplo de configuração (deve ser colocado em mpd.conf):
#
# audio_output {
#        type            "fifo"
#        name            "Visualizer feed"
#        path            "/tmp/mpd.fifo"
#        format          "44100:16:1"
# }
##
#
visualizer_in_stereo = "no"
# visualizer_type = "spectrum" (spectrum/wave)
visualizer_look = "∙▋"
# visualizer_color = "magenta"
#
##
## Observação: O parâmetro abaixo é necessário para ncmpcpp para determinar qual saída fornece
## dados para o visualizador e, assim, permitir a sincronização entre a visualização e o som, pois
## atualmente existem alguns problemas com isso.
##
#
# visualizer_output_name = "FIFO"
#
##
## Se você definir o formato para 44100:16:2, torne-o 'sim'.
##
# visualizer_in_stereo = yes
#
##
## Multiplique as amostras recebidas por determinado valor.
## Muito útil para a visualização adequada de música tranquila.
##
# visualizer_sample_multipler = 1
#
##
## Observação: O parâmetro abaixo define com que frequência o ncmpcpp deve
## "sincronizar" o visualizador e as saídas de áudio. 30 segundos é o valor ideal,
## mas se você tiver problemas de sincronização, defina-o para um valor mais baixo.
## Lembre-se de que os valores normais começam com >=10.
##
#
# visualizer_sync_interval = 19
#
## Observação: Para habilitar a visualização da frequência do espectro
## você precisa compilar o ncmpcpp com suporte a fftw3.
#
## Valores disponíveis: spectrum, wave.
##
# visualizer_type = "spectrum"
#
# visualizer_look = "●▮"
#
# ===========================
# == Codificação do Sistema
# ===========================
#
## ncmpcpp deve detectar a codificação do conjunto de caracteres,
## mas se não conseguiu, você pode especificar a codificação do conjunto 
## de caracteres que está usando aqui.
##
## Observação: Você pode ver se sua construção ncmpcpp suporta detecção
## de charset verificando a saída de `ncmpcpp --version`.
##
## Observação: como o MPD usa UTF-8 por padrão, definir essa opção
## só faz sentido se a sua codificação for diferente.
##
#
system_encoding = "utf-8"
#
# =====================
# == Atrasos / Delays
# =====================
#
## Tempo de inatividade (em segundos) após o realce da lista
## de reprodução ser desativado (0 = sempre ativado).
##
playlist_disable_highlight_delay = 3
#
## Define por quanto tempo as mensagens devem ficar visíveis.
##
message_delay_time = 3
#
# =====================
# == Formas de Música
# =====================
##
## Para o formato da música, você pode usar;
##
## %l - length
## %f - filename
## %D - directory
## %a - artist
## %A - album artist
## %t - title
## %b - album
## %y - date
## %n - track number (01/12 -> 01)
## %N - full track info (01/12 -> 01/12)
## %g - genre
## %c - composer
## %p - performer
## %d - disc
## %C - comment
## %P - priority
## $R - begin right alignment
##
## you can also put them in { } and then it will be displayed
## only if all requested values are available and/or define alternate
## value with { }|{ } eg. {%a - %t}|{%f}
##
## Note: If you want to set limit on maximal length of a tag, just
## put the appropriate number between % and character that defines
## tag type, e.g. to make album take max. 20 terminal cells, use '%20b'.
##
## Note: Format that is similar to "%a - %t" (i.e. without any additional
## braces) is equal to "{%a - %t}", so if one of the tags is missing,
## you'll get nothing.
##
## text can also have different color than the main window has,
## eg. if you want length to be green, write "$3%l$9".
##
## Valores disponíveis;
##
## - 0 - cor padrão da janela, (descarta todas as outras cores)
## - 1 - black
## - 2 - red
## - 3 - green
## - 4 - yellow
## - 5 - blue
## - 6 - magenta
## - 7 - cyan
## - 8 - white
## - 9 - fim da cor atual
##
## Observação: as cores podem ser aninhadas.
##
#
song_list_format = {$(248)%f}$R{$(248)(%l)}
# song_list_format = "$9{$3%a $1►$3 %t}|{$8%a $1►$8 <sem título>}|{$8<artista desconhecido> $1►$3 %t}|{$1►$8 %f} $9 $R{$1%l}"
#
# song_status_format = {{%a{ "%b"{ (%y)}} - }{%t}}|{%f}
# song_status_format = {$8%t}{$8 "%b"}|{$8 "%a"}$8
#
# song_library_format = {%n - }{%t}|{%f}
#
# tag_editor_album_format = {(%y) }%b
#
##
## Note: Below variables are used for sorting songs in browser.
## The sort mode determines how songs are sorted, and can be used
## in combination with a sort format to specify a custom sorting format.
## Available values for browser_sort_mode are "name", "mtime", "format"
## and "noop".
##
#
# browser_sort_mode = name
#
# browser_sort_format = {%a - }{%t}|{%f} {(%l)}
#
##
## Note: Below variables are for alternative version of user's interface.
## Their syntax supports all tags and colors listed above plus some extra
## markers used for text attributes. They are followed by character '$'.
## After that you can put:
##
## - b - bold text
## - u - underline text
## - r - reverse colors
## - a - use alternative character set
##
## If you don't want to use an attribute anymore, just put it again, but
## this time insert character '/' between '$' and attribute character,
## e.g. {$b%t$/b}|{$r%f$/r} will display bolded title tag or filename
## with reversed colors.
##
#
# alternative_header_first_line_format = $b$1$aqqu$/a$9 {%t}|{%f} $1$atqq$/a$9$/b
#
# alternative_header_second_line_format = {{$4$b%a$/b$9}{ - $7%b$9}{ ($4%y$9)}}|{%D}
alternative_header_first_line_format = "$8$aqqu$/a$b {%t}|{%f} $/b$8$atqq$/a$9"
alternative_header_second_line_format = "{{$8%a}{$8 - %b$9}{$8 (%y)$8}}|{%D$9}"
#
##
## Observação: as variáveis abaixo também suportam os atributos de texto listados acima.
##
#
now_playing_prefix = "$b$5»$5»$5» "
now_playing_suffix = "$/b"
#
# browser_playlist_prefix = "$2playlist$9 "
#
selected_item_prefix = $6
#
selected_item_suffix = $9
#
# modified_item_prefix = $3> $9
#
## Observação: As cores não são suportadas para a variável abaixo.
#
# song_window_title_format = {%a - }{%t}|{%f}
#
# =============================
# == Configurações de Colunas 
# =============================
#
## syntax of song columns list format is "column column etc."
##
## - syntax for each column is:
##
## (width of column)[column's color]{displayed tag}
##
## Note: Width is by default in %, if you want a column to
## have fixed size, add 'f' after the value, e.g. (10)[white]{a}
## will be the column that take 10% of screen (so the real column's
## width will depend on actual screen size), whereas (10f)[white]{a}
## will take 10 terminal cells, no matter how wide the screen is.
##
## - color is optional (if you want the default one, type [])
##
## Note: You can give a column additional attributes by putting appropriate
## character after displayed tag character. Available attributes are:
##
## - r - column will be right aligned
## - E - if tag is empty, empty tag marker won't be displayed
##
## You can also:
##
## - give a column custom name by putting it after attributes,
##   separated with character ':', e.g. {lr:Length} gives you
##   right aligned column of lengths named "Length".
##
## - define sequence of tags, that have to be displayed in case
##   predecessor is empty in a way similar to the one in classic
##   song format, i.e. using '|' character, e.g. {a|c|p:Owner}
##   creates column named "Owner" that tries to display artist
##   tag and then composer and performer if previous ones are
##   not available.
##
#
# song_columns_list_format = (20)[]{a|f:Artísta} (6f)[]{NE} (50)[]{t|f:Título} (20)[]{b} (7f)[]{l|f:Tempo}
song_columns_list_format = (50)[]{t|f:Titulo} (7f)[]{l|f:Tempo}
#
# ========================
# == Várias Configurações
# ========================
#
## Observação: Comando personalizado que será executado cada vez que a música mudar.
## Útil para notificações etc.
##
## Atenção: Ele não suporta mais o formato de música.
## Use `ncmpcpp --now-playing SONG_FORMAT` ao invés.
#
# execute_on_song_change = ""
#
# playlist_show_remaining_time = no
#
# playlist_shorten_total_times = no
#
# playlist_separate_albums = no
#
##
## Observação: Possíveis modos de exibição: classic, columns.
##
playlist_display_mode = classic
#
browser_display_mode = columns
#
# search_engine_display_mode = columns
#
# playlist_editor_display_mode = columns
#
# discard_colors_if_item_is_selected = yes
#
# incremental_seeking = yes
#
seek_time = 5
#
volume_change_step = 3
#
autocenter_mode = yes
#
# centered_cursor = no
#
##
## Observação: Você pode especificar o terceiro caractere que será usado
## para construir uma parte 'vazia' da barra de progresso.
##
# progressbar_look = "=>"
# progressbar_look = "─⊙ "
# progressbar_look = "▒▒░"
# progressbar_look = "┅┅┄"
# progressbar_look = "─■─"
# progressbar_look = "▀▀▀"
progressbar_look = "─╼─"
# progressbar_look = "─➞─"
# progressbar_look = "─┅─"
# progressbar_look = "▪▪▪"
# progressbar_look = "▪▪▫"
# progressbar_look = "───"
# progressbar_look = "▁▁▁"
# progressbar_look = "‒‒‒"
# progressbar_look = "■◣ "
# progressbar_look = "◈◆◇"
#
#
## Valores disponíveis: database, playlist.
##
# default_place_to_search_in = database
#
## Available values: classic, alternative.
##
user_interface = classic
#
## Valores disponíveis: artist, album_artist, date, genre, composer, performer.
##
# media_library_primary_tag = artist
#
## Available values: wrapped, normal.
##
# default_find_mode = wrapped
#
## Available values: add, select.
##
# default_space_mode = add
#
# default_tag_editor_pattern = %n - %t
#
header_visibility = yes 
#
statusbar_visibility = yes
#
# titles_visibility = yes
#
# header_text_scrolling = yes
#
# cyclic_scrolling = no
#
# lines_scrolled = 2#
#
# follow_now_playing_lyrics = no
#
# fetch_lyrics_for_current_song_in_background = no
#
# store_lyrics_in_song_dir = no
#
# generate_win32_compatible_filenames = yes
#
allow_for_physical_item_deletion = no
#
##
## Observação: Se você definir esta variável, o ncmpcpp tentará obter informações
## do last.fm no idioma que você definiu e, se falhar, voltará para o inglês.
## Caso contrário, ele usará o inglês na primeira vez.
##
## Observação: O idioma deve ser expresso como um código ISO 639 alfa-2.
##
# lastfm_preferred_language = en
#
## Available values: add_remove, always_add.
##
# space_add_mode = always_add
#
# show_hidden_files_in_local_browser = no
#
##
## How shall screen switcher work?
##
## - "previous" - switch between the current and previous screen.
## - "screen1,...,screenN" - switch between given sequence of screens.
##
## Screens available for use: help, playlist, browser, search_engine,
## media_library, playlist_editor, tag_editor, outputs, visualizer, clock.
##
# screen_switcher_mode = playlist, browser
#
##
## Observação: Você pode definir a tela de inicialização para ncmpcpp
## escolhendo a tela da lista acima.
##
startup_screen = "playlist"
#
##
## Largura padrão da tela bloqueada (em %).
## Os valores aceitáveis são de 20 a 80.
##
#
# locked_screen_width_part = 50
#
# ask_for_locked_screen_width_part = yes
#
# jump_to_now_playing_song_at_start = yes
#
# ask_before_clearing_playlists = yes
#
# clock_display_seconds = no
#
display_volume_level = yes
#
# display_bitrate = no
#
display_remaining_time = yes
playlist_show_remaining_time = no
#
## Valores disponíveis: none, basic, extended.
##
# regular_expressions = none
#
##
## Observação: Se a opção abaixo estiver ativada, o ncmpcpp irá ignorar a palavra
## "The" inicial ao classificar itens no navegador, tags na biblioteca de mídia, etc.
##
# ignore_leading_the = no
#
# block_search_constraints_change_if_items_found = yes
#
mouse_support = yes 
#
# mouse_list_scroll_whole_page = yes
#
#  
# Valor disponível: " -- NENHUMA TAG -- "
empty_tag_marker = " "
#
# tags_separator = " | "
#
# tag_editor_extended_numeration = no
#
# media_library_sort_by_mtime = no
#
# enable_window_title = yes
#
#
## Observação: Você pode escolher o modo de pesquisa padrão para o mecanismo de pesquisa.
## Os modos disponíveis são;
##
## - 1 - use mpd built-in searching (no regexes, pattern matching)
## - 2 - use ncmpcpp searching (pattern matching with support for regexes,
##       but if your mpd is on a remote machine, downloading big database
##       to process it can take a while
## - 3 - match only exact values (this mode uses mpd function for searching
##       in database and local one for searching in current playlist)
##
#
# search_engine_default_search_mode = 1
#
external_editor = "/usr/bin/vim"
#
## Observação: Defina como sim se o editor externo for um aplicativo de console.
#
use_console_editor = yes
#
# =======================
# == Definições de Cores
# =======================
#
colors_enabled = yes
empty_tag_color = 9
header_window_color = 239
volume_color = 5
state_line_color = 239
state_flags_color = "white"
main_window_color = 248 
color1 = "blue"
color2 = 48
progressbar_color = 9
progressbar_elapsed_color = 5 
statusbar_color = 239 
alternative_ui_separator_color = 239
# visualizer_color = "magenta"
window_border_color = "white"
active_window_border = "white"
#
# ===============
# == Notificação
# ===============
#
execute_on_song_change = notify-send -i "/usr/share/icons/Papirus/32x32/apps/multimedia-volume-control.svg" "$(mpc current)"
#