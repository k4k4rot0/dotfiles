# ===================================================================
# Este arquivo contém os comandos de inicialização padrão para ranger.
# Para alterá-los, é recomendado criar /etc/ranger/rc.conf
# (para todo o sistema) ou ~ / .config / ranger / rc.conf (por usuário)
# e adicionar seus comandos personalizados lá.
#
# Se você copiar todo o arquivo para lá, poderá definir a variável de
# ambiente RANGER_LOAD_DEFAULT_RC como FALSE para evitar carregá-lo duas vezes.
#
# O objetivo deste arquivo é principalmente definir atalhos de teclado e configurações.
# Para executar um código python mais complexo, crie um plugin em "plugins /"
# ou um comando em "commands.py".
#
# Cada linha é um comando que será executado antes que a interface do usuário seja inicializada.
# Como resultado, você não pode usar comandos que dependem da IU, como: delete ou: mark.
#
# ===================================================================
# == By: @k4k4rot0
# ===================================================================
# == Opções
# ===================================================================
#
# Qual modo de exibição deve ser usado? Os valores possíveis são:
#     miller: Use colunas de miller que mostram vários níveis da hierarquia
#     multipane: Comandante da meia-noite, como visualização multipane mostrando todas as guias
#                próximas umas das outras.
#
set viewmode miller
#set viewmode multipane

# Quantas colunas existem e quais são suas larguras relativas?
set column_ratios 1,3,4

# Quais arquivos devem ser ocultados? (expressão regular)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# Mostrar arquivos ocultos? Você pode alternar digitando 'zh'
set show_hidden false

# Pedir uma confirmação ao executar o comando "delete"?
# Os valores válidos são: "always / sempre ", "never / nunca", "multiple / múltiplo" (default)
# Com "múltiplo", o ranger perguntará apenas se você excluir vários arquivos de uma vez.
set confirm_on_delete always

# Usar caminho não padrão para script de visualização de arquivo?
# O ranger vem com o scope.sh, um script que chama programas externos
# (consulte README.md para dependências) para visualizar imagens, arquivos, etc.
set preview_script ~/.config/ranger/scope.sh

# Usar o script de visualização externa ou exibir texto simples ou visualizações de imagens?
set use_preview_script true

# Contar arquivos automaticamente no diretório, antes mesmo de inseri-los?
set automatically_count_files true

# Abrir todas as imagens neste diretório ao executar certos visualizadores
# de imagens como feh ou sxiv? Você ainda pode abrir arquivos selecionados marcando-os.
set open_all_images true

# Esteja ciente dos sistemas de controle de versão e exiba informações.
set vcs_aware false

# State of the four backends git, hg, bzr, svn. The possible states are
# disabled, local (only show local info), enabled (show local and remote
# information).

# Estado dos quatro backends git, hg, bzr, svn. Os estados possíveis são;
# disabled / desabilitado, local (mostrar apenas informações locais), enabled / habilitado
# (mostrar informações locais e remotas).
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled

# Truncar as mensagens de confirmação longas para este comprimento quando mostrado na barra de status.
set vcs_msg_length 50

# Use um dos protocolos de visualização de imagem suportados
set preview_images true

# Defina o método de visualização da imagem. Métodos suportados:
#
# * w3m (default):
#   Preview images in full color with the external command "w3mimgpreview"?
#   This requires the console web browser "w3m" and a supported terminal.
#   It has been successfully tested with "xterm" and "urxvt" without tmux.
#
# * iterm2:
#   Preview images in full color using iTerm2 image previews
#   (http://iterm2.com/images.html). This requires using iTerm2 compiled
#   with image preview support.
#
#   This feature relies on the dimensions of the terminal's font.  By default, a
#   width of 8 and height of 11 are used.  To use other values, set the options
#   iterm2_font_width and iterm2_font_height to the desired values.
#
# * terminology:
#   Previews images in full color in the terminology terminal emulator.
#   Supports a wide variety of formats, even vector graphics like svg.
#
# * urxvt:
#   Preview images in full color using urxvt image backgrounds. This
#   requires using urxvt compiled with pixbuf support.
#
# * urxvt-full:
#   The same as urxvt but utilizing not only the preview pane but the
#   whole terminal window.
#
# * kitty:
#   Preview images in full color using kitty image protocol.
#   Requires python PIL or pillow library.
#   If ranger does not share the local filesystem with kitty
#   the transfer method is changed to encode the whole image;
#   while slower, this allows remote previews,
#   for example during an ssh session.
#   Tmux is unsupported.
#
# * ueberzug:
#   Preview images in full color with the external command "ueberzug".
#   Images are shown by using a child window.
#   Only for users who run X11 in GNU/Linux.
set preview_images_method w3m

# Atrase em segundos antes de exibir uma imagem com o método w3m.
# Aumente-o em caso de corrupção da tela.
set w3m_delay 0.02

# Ajuste manualmente o deslocamento w3mimg ao usar um terminal que precisa disso.
set w3m_offset 0

# Tamanho de fonte padrão do iTerm2 (ver: preview_images_method: iterm2)
set iterm2_font_width 8
set iterm2_font_height 11

# Usar um caractere unicode "..." para marcar nomes de arquivos cortados?
set unicode_ellipsis false

# Suporte BIDI - tente exibir corretamente os nomes dos arquivos em idiomas RTL
# (hebraico, árabe). Requer o pacote python-bidi pip
set bidi_support false

# Mostrar dotfiles na caixa de visualização dos favoritos?
set show_hidden_bookmarks true

# Qual esquema de cores usar? Esses esquemas de cores estão disponíveis por padrão:
# default, jungle, snow, solarized
set colorscheme default

# Visualizar arquivos na coluna mais à direita?
#E recolher (reduzir) a última coluna se não houver nada para visualizar?
set preview_files true
set preview_directories true
set collapse_preview true

# Quebrar linhas longas em visualizações de texto simples?
set wrap_plaintext_previews true

# Salvar o histórico do console ao sair?
set save_console_history true

# Desenhe a barra de status na parte superior da janela do navegador (padrão: inferior)
set status_bar_on_top false

# Desenhe uma barra de progresso na barra de status que exibe o estado médio de todas as 
# tarefas atualmente em execução que suportam barras de progresso.
set draw_progress_bar_in_status_bar true

# Desenhar bordas em torno das colunas? (separators, outline, both, or none)
# (Separators) São linhas verticais entre colunas.
# (Outline) Desenha uma caixa ao redor de todas as colunas.
# (Both) Combinam os dois.
set draw_borders nome

# Exibir o nome do diretório nas guias?
set dirname_in_tabs false

# Ativar o suporte do mouse?
set mouse_enabled true

# Exibir o tamanho do arquivo na coluna principal ou barra de status?
set display_size_in_main_column true
set display_size_in_status_bar true

# Exibir o espaço livre em disco na barra de status?
set display_free_space_in_status_bar true

# Exibir tags de arquivos em todas as colunas ou apenas na coluna principal?
set display_tags_in_all_columns true

# Definir um título para a janela? Atualiza `WM_NAME` e` WM_ICON_NAME`
set update_title false

# Definir o nome da janela tmux / screen para "ranger"?
set update_tmux_title true

# Encurtar o título se ficar longo? O número define quantos diretórios 
# são exibidos de uma vez, 0 desativa este recurso.
set shorten_title 3

# Mostrar hostname na barra de título?
set hostname_in_titlebar true

# Abrevie $HOME com ~ na barra de título (primeira linha) de ranger?
set tilde_in_titlebar false

# Quantas mudanças de diretório ou comandos de console devem ser mantidos no histórico?
set max_history_size 20
set max_console_history_size 50

# Tente manter tanto espaço entre as bordas superior / inferior ao rolar:
set scroll_offset 8

# Limpar a entrada após cada pressionamento de tecla? (Perceptível quando ranger atrasa)
set flushinput true

# Preenchimento à direita quando não há visualização? 
# Isso permite que você clique no espaço para executar o arquivo.
set padding_right true

# Save bookmarks (used with mX and `X) instantly?
# This helps to synchronize bookmarks between multiple ranger
# instances but leads to *slight* performance loss.
# When false, bookmarks are saved when ranger is exited.
set autosave_bookmarks true

# Salve o marcador "` "no disco. Isso pode ser usado para alternar
# para o último diretório digitando "` `".
set save_backtick_bookmark true

# You can display the "real" cumulative size of directories by using the
# command :get_cumulative_size or typing "dc".  The size is expensive to
# calculate and will not be updated automatically.  You can choose
# to update it automatically though by turning on this option:
set autoupdate_cumulative_size false

# Ativar isso faz sentido para leitores de tela:
set show_cursor false

# Um dos seguintes: size, natural, basename, atime, ctime, mtime, type, random
set sort natural

# Opções adicionais de classificação
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# Ative-o se as combinações de teclas com a tecla Alt não funcionarem para você.
# (Especialmente no xterm)
set xterm_alt_key false

# Se incluir favoritos no comando cd
set cd_bookmarks true

# Altera a distinção entre maiúsculas e minúsculas para a conclusão da guia do comando cd
set cd_tab_case sensitive

# Use o preenchimento de tabulação difusa com o comando "cd". Por exemplo,
# ":cd /u/lo/b<tab>" expande para ":cd /usr/local/bin".
set cd_tab_fuzzy false

# Evite visualizar arquivos maiores do que este tamanho, em bytes.
# Use um valor de 0 para desativar este recurso.
set preview_max_size 0

# As principais dicas de listas até esse tamanho têm suas sublistas expandidas.
# Caso contrário, os submapas são substituídos por "..."
set hint_collapse_threshold 10

# Adicione o arquivo destacado ao caminho na barra de título
set show_selection_in_titlebar true

# O retardo que o ranger espera ociosamente pela entrada do usuário, em milissegundos,
# com uma resolução de 100ms. Atraso menor reduz o atraso entre as atualizações
# do diretório, mas aumenta a carga da CPU.
set idle_delay 2000

# Quando o módulo gerenciador de metadados procura por metadados, ele deve procurar
# apenas por um arquivo ".metadata.json" no diretório atual ou fazer uma pesquisa profunda
# e verificar todos os diretórios acima do atual também?
set metadata_deep_search false

# Limpe todos os filtros existentes ao sair de um diretório
set clear_filters_on_dir_change false

# Desative a exibição de números de linha na coluna principal.
# Valores possíveis: false, absolute, relative.
set line_numbers false

# Quando line_numbers = relative mostra o número absoluto da linha na
# linha atual.
set relative_current_zero false

# Comece os números da linha de 1 em vez de 0
set one_indexed false

# Salvar guias ao sair
set save_tabs_on_exit false

# Ativar quebra automática de rolagem - mover para baixo enquanto no último item irá quebrar
# para o topo e vice-versa.
set wrap_scroll false

# Defina o global_inode_type_filter para nada. Opções possíveis: d, f e l para
# diretórios, arquivos e links simbólicos, respectivamente.
set global_inode_type_filter

# Esta configuração permite congelar a lista de arquivos para economizar largura de banda
# de E / S. Deve ser 'falso' durante a inicialização, mas você pode alternar pressionando F.
set freeze_files false

# Imprime os tamanhos dos arquivos em bytes em vez do formato legível por humanos padrão.
set size_in_bytes false

# Avisa na inicialização se RANGER_LEVEL env var é maior que 0, em outras palavras,
# dá um aviso quando você aninha o ranger em um subshell iniciado por ranger.
# O valor especial "erro" torna o aviso mais visível.
set nested_ranger_warning true

# ===================================================================
# == Opções Locais
# ===================================================================
# Você pode definir opções locais que afetam apenas um único diretório.

# Exemplos:
# setlocal path=~/downloads sort mtime

# ===================================================================
# == Aliases de comando no console
# ===================================================================

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===================================================================
# == Definir chaves para o navegador
# ===================================================================

# Básico
map     Q quitall
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map F     set freeze_files!
map <C-r> reset
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal
map ~ set viewmode!

map i display_file
map <A-j> scroll_preview 1
map <A-k> scroll_preview -1
map ? help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell  %%s
map #  console shell -p%space
map s  console shell%space
map r  chain draw_possible_programs; console open_with%space
map f  console find%space
map cd console cd%space

map <C-p> chain console; eval fm.ui.console.history_move(-1)

# Mudar o modo de linha
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mh linemode humanreadablemtime
map Mp linemode permissions
map Ms linemode sizemtime
map MH linemode sizehumanreadablemtime
map Mt linemode metatitle

# Etiquetagem / Marcação
map t       tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

# Para os nostálgicos: ligações do Midnight Commander
map <F1> help
map <F2> rename_append
map <F3> display_file
map <F4> edit
map <F5> copy
map <F6> cut
map <F7> console mkdir%space
map <F8> console delete
#map <F8> console trash
map <F10> exit

# Caso você trabalhe em um teclado com layout dvorak
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
#map <DELETE>   console delete
map <INSERT>   console touch%space

# VIM-like
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# Jumping around
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse
map {     traverse_backwards
map )     jump_non

map gh cd ~
map ge cd /etc
map gu cd /usr
map gd cd /dev
map gl cd -r .
map gL cd -r %f
map go cd /opt
map gv cd /var
map gm cd /media
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger

# Programas Externos
map E  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

# Operações do sistema de arquivos
map =  chmod

map cw console rename%space
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree
map pd console paste dest=
map p`<any> paste dest=%any_path
map p'<any> paste dest=%any_path

map dD console delete
map dT console trash

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# Soluções temporárias
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

# Procurando
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime

# Tabs
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
map gn        tab_new
map gc        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-r>     tab_shift 1
map <a-l>     tab_shift -1

# Sorting
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size

# Settings
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map zf    console filter%space
copymap zf zz

# Filter stack
map .d filter_stack add type d
map .f filter_stack add type f
map .l filter_stack add type l
map .m console filter_stack add mime%space
map .n console filter_stack add name%space
map .# console filter_stack add hash%space
map ." filter_stack add duplicate
map .' filter_stack add unique
map .| filter_stack add or
map .& filter_stack add and
map .! filter_stack add not
map .r filter_stack rotate
map .c filter_stack clear
map .* filter_stack decompose
map .p filter_stack pop
map .. filter_stack show

# Bookmarks
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# Generate all the chmod bindings with some python help:
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===================================================================
# == Definir chaves para o console
# ===================================================================
# Nota: Chaves não mapeadas são passadas diretamente para o console.

# Básico
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# Mover-se
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# Edição de linha
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# E, claro, o jeito emacs
copycmap <ESC>       <C-g>
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# Note: There are multiple ways to express backspaces.  <backspace> (code 263)
# and <backspace2> (code 127).  To be sure, use both.
copycmap <backspace> <backspace2>

# Esta expressão especial permite digitar números:
cmap <allow_quantifiers> false

# ===================================================================
# == Atalhos de teclado de pager
# ===================================================================

# Movimento
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# Básico
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == Atalhos de teclado do Taskview
# ===================================================================

# Movimento
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# Alterar a prioridade e excluir tarefas
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# Básico
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>
